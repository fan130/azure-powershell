#
# Module manifest for module 'PSGet_AzureRM.Batch'
#
# Generated by: Microsoft Corporation
#
# Generated on: 11/3/2017
#

@{

# Script module or binary module file associated with this manifest.
# RootModule = ''

# Version number of this module.
ModuleVersion = '4.0.0'

# Supported PSEditions
# CompatiblePSEditions = @()

# ID used to uniquely identify this module
GUID = 'a8f00f40-1c1a-49b5-9db3-24076b75c3cf'

# Author of this module
Author = 'Microsoft Corporation'

# Company or vendor of this module
CompanyName = 'Microsoft Corporation'

# Copyright statement for this module
Copyright = 'Microsoft Corporation. All rights reserved.'

# Description of the functionality provided by this module
Description = 'Microsoft Azure PowerShell - Batch service cmdlets for Azure Resource Manager'

# Minimum version of the Windows PowerShell engine required by this module
PowerShellVersion = '3.0'

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
DotNetFrameworkVersion = '4.5.2'

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
CLRVersion = '4.0'

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
RequiredModules = @(@{ModuleName = 'AzureRM.Profile'; ModuleVersion = '4.0.0'; })

# Assemblies that must be loaded prior to importing this module
RequiredAssemblies = '.\Microsoft.Azure.Batch.dll',
                     '.\Microsoft.Azure.Management.Batch.dll',
                     '.\Microsoft.Data.Edm.dll',
                     '.\Microsoft.Data.OData.dll',
                     '.\Microsoft.Data.Services.Client.dll',
                     '.\Microsoft.WindowsAzure.Storage.dll'

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
FormatsToProcess = '.\Microsoft.Azure.Commands.Batch.format.ps1xml'

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
NestedModules = @('.\Microsoft.Azure.Commands.Batch.dll')

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = @()

# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
CmdletsToExport = 'Remove-AzureRmBatchAccount', 'Get-AzureRmBatchAccount', 
               'Get-AzureRmBatchAccountKeys', 'New-AzureRmBatchAccount', 
               'New-AzureRmBatchAccountKey', 'Set-AzureRmBatchAccount', 
               'New-AzureRmBatchApplicationPackage', 'Get-AzureBatchJobStatistics', 
               'Remove-AzureRmBatchApplication', 
               'Remove-AzureRmBatchApplicationPackage', 
               'Get-AzureRmBatchApplicationPackage', 'Get-AzureRmBatchApplication', 
               'Set-AzureRmBatchApplication', 'New-AzureRmBatchApplication', 
               'Get-AzureBatchCertificate', 'Remove-AzureBatchCertificate', 
               'New-AzureBatchCertificate', 'Stop-AzureBatchCertificateDeletion', 
               'Disable-AzureBatchComputeNodeScheduling', 
               'Enable-AzureBatchComputeNodeScheduling', 
               'Get-AzureBatchRemoteLoginSettings', 'Remove-AzureBatchComputeNode', 
               'Reset-AzureBatchComputeNode', 'Restart-AzureBatchComputeNode', 
               'Set-AzureBatchComputeNodeUser', 'Get-AzureBatchNodeFile', 
               'Get-AzureBatchNodeFileContent', 
               'Get-AzureBatchRemoteDesktopProtocolFile', 
               'Remove-AzureBatchNodeFile', 'Disable-AzureBatchJobSchedule', 
               'Enable-AzureBatchJobSchedule', 'Set-AzureBatchJobSchedule', 
               'Stop-AzureBatchJobSchedule', 'Disable-AzureBatchJob', 
               'Enable-AzureBatchJob', 'New-AzureBatchJob', 'Remove-AzureBatchJob', 
               'Set-AzureBatchJob', 'Stop-AzureBatchJob', 'Get-AzureBatchJob', 
               'Get-AzureBatchJobPreparationAndReleaseTaskStatus', 
               'Disable-AzureBatchAutoScale', 'Enable-AzureBatchAutoScale', 
               'Get-AzureBatchPoolStatistics', 'Get-AzureBatchPoolUsageMetrics', 
               'Get-AzureBatchPool', 'Get-AzureBatchNodeAgentSku', 
               'New-AzureBatchPool', 'Remove-AzureBatchPool', 'Set-AzureBatchPool', 
               'Set-AzureBatchPoolOSVersion', 'Start-AzureBatchPoolResize', 
               'Stop-AzureBatchPoolResize', 'Test-AzureBatchAutoScale', 
               'Get-AzureRmBatchLocationQuotas', 'Get-AzureBatchSubtask', 
               'Get-AzureBatchTask', 'New-AzureBatchTask', 'Remove-AzureBatchTask', 
               'New-AzureBatchComputeNodeUser', 'Remove-AzureBatchComputeNodeUser', 
               'Enable-AzureBatchTask', 'Set-AzureBatchTask', 'Stop-AzureBatchTask', 
               'Get-AzureBatchComputeNode', 'Get-AzureBatchJobSchedule', 
               'New-AzureBatchJobSchedule', 'Remove-AzureBatchJobSchedule', 
               'Get-AzureBatchTaskCounts'

# Variables to export from this module
# VariablesToExport = @()

# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
AliasesToExport = 'Reactivate-AzureBatchTask', 'Get-AzureRmBatchSubscriptionQuotas'

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
# FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = 'Azure','ResourceManager','ARM','Batch'

        # A URL to the license for this module.
        LicenseUri = 'https://aka.ms/azps-license'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/Azure/azure-powershell'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = '* NOTE: This is a breaking change release. Please see the migration guide (https://aka.ms/azps-migration-guide) for a full list of breaking changes introduced.
* Added new parameters to `New-AzureRmBatchAccount`.
    - `PoolAllocationMode`: The allocation mode to use for creating pools in the Batch account. To create a Batch account which allocates pool nodes in the user''s subscription, set this to `UserSubscription`.
    - `KeyVaultId`: The resource ID of the Azure key vault associated with the Batch account.
    - `KeyVaultUrl`: The URL of the Azure key vault associated with the Batch account.
* Updated parameters to `New-AzureBatchTask`.
    - Removed the `RunElevated` switch. The `UserIdentity` parameter has been added to replace `RunElevated`, and the equivalent behavior can be achieved by constructing a `PSUserIdentity` as shown below:
        - $autoUser = New-Object Microsoft.Azure.Commands.Batch.Models.PSAutoUserSpecification -ArgumentList @("Task", "Admin")
        - $userIdentity = New-Object Microsoft.Azure.Commands.Batch.Models.PSUserIdentity $autoUser
    - Added the `AuthenticationTokenSettings` parameter. This parameter allows you to request the Batch service provide an authentication token to the task when it runs, avoiding the need to pass Batch account keys to the task in order to issue requests to the Batch service.
    - Added the `ContainerSettings` parameter.
        - This parameter allows you to request the Batch service run the task inside a container.
    - Added the `OutputFiles` parameter.
        - This parameter allows you to configure the task to upload files to Azure Storage after it has finished.
* Updated parameters to `New-AzureBatchPool`.
    - Added the `UserAccounts` parameter.
        - This parameter defines user accounts created on each node in the pool.
    - Added `TargetLowPriorityComputeNodes` and renamed `TargetDedicated` to `TargetDedicatedComputeNodes`.
        - A `TargetDedicated` alias was created for the `TargetDedicatedComputeNodes` parameter.
    - Added the `NetworkConfiguration` parameter.
        - This parameter allows you to configure the pools network settings.
* Updated parameters to `New-AzureBatchCertificate`.
    - The `Password` parameter is now a `SecureString`.
* Updated parameters to `New-AzureBatchComputeNodeUser`.
    - The `Password` parameter is now a `SecureString`.
* Updated parameters to `Set-AzureBatchComputeNodeUser`.
    - The `Password` parameter is now a `SecureString`.
* Renamed the `Name` parameter to `Path` on `Get-AzureBatchNodeFile`, `Get-AzureBatchNodeFileContent`, and `Remove-AzureBatchNodeFile`.
    - A `Name` alias was created for the `Path` parameter.
* Changes to objects:
    - Removed the `RunElevated` property on `PSCloudTask`, `PSStartTask`, `PSJobManagerTask`, `PSJobPreparationTask`, and `PSJobReleaseTask`. The `UserIdentity` property has been added to replace `RunElevated`. Equivalent behavior to `RunElevated = $true` can be achieved by constructing a `PSUserIdentity` as shown below:
        - $autoUser = New-Object Microsoft.Azure.Commands.Batch.Models.PSAutoUserSpecification -ArgumentList @("Task", "Admin")
        - $userIdentity = New-Object Microsoft.Azure.Commands.Batch.Models.PSUserIdentity $autoUser
    - Added the `AuthenticationTokenSettings` property to `PSCloudTask` and `PSJobManagerTask`.
    - Added the `OutputFiles` property to `PSCloudTask`, and `PSJobManagerTask`.
    - Added the `ContainerSettings` property to `PSCloudTask`, `PSStartTask`, `PSJobManagerTask`, `PSJobPreparationTask`, and `PSJobReleaseTask`.
    - Added the `AllowLowPriorityNode` property to `PSJobManagerTask`.
    - Renamed the `SchedulingError` property on `PSJobPreparationTaskExecutionInformation`, `PSJobReleaseTaskExecutionInformation`, `PSStartTaskInformation`, `PSSubtaskInformation`, and `PSTaskExecutionInformation` to `FailureInformation`.
        - `FailureInformation` is returned any time there is a task failure. This includes all previous scheduling error cases, as well as nonzero task exit codes, and file upload failures from the new output files feature.
    - Renamed `PSTaskSchedulingError` to `PSTaskFailureInformation`.
    - Added the `ContainerInformation` and `Result` properties to `PSJobPreparationTaskExecutionInformation`, `PSJobReleaseTaskExecutionInformation`, `PSStartTaskInformation`, `PSSubtaskInformation`, and `PSTaskExecutionInformation`.
    - Added the `UserAccounts` property to `PSCloudPool` and `PSPoolSpecification`.
    - Added the `TargetLowPriorityComputeNodes` property to `PSCloudPool` and `PSPoolSpecification`, and renamed `TargetDedicated` to `TargetDedicatedComputeNodes`.
    - Renamed the `Name` property on `PSNodeFile` to `Path`.
    - Added the `EndpointConfiguration` and `IsDedicated` property to `PSComputeNode`.
    - Renamed the `SchedulingError` property on `PSExitConditions` to `PreProcessingError`.
    - Added the `FileUploadError` to `PSExitConditions`.
    - Added the `DependencyAction` property to `PSExitOptions`.
    - Added the `OSDisk`, `ContainerConfiguration`, `DataDisks`, and `LicenseType` properties to `PSVirtualMachineConfiguration`.
    - Added the `VirtualMachineImageId` property to `PSImageReference`. Note that in order to allow deploying nodes using custom VHDs, the `BatchAccountContext` must be using Azure Active Directory authentication.
    - Added the `OnAllTasksComplete` and `OnTaskFailure` properties to `PSJobSpecification`.
    - Added the `EndpointConfiguration` property to `PSNetworkConfiguration`.
    - Renamed `ResizeError` to `ResizeErrors` on `PSCloudPool`, and it is now a collection.
    - `PSMultiInstanceSettings` constructor no longer takes a required `numberOfInstances` parameter, instead it takes a required `coordinationCommandLine` parameter.
* Added support for Azure Active Directory based authentication.
    - To use Azure Active Directory authentication, retrieve a `BatchAccountContext` object using the `Get-AzureRmBatchAccount` cmdlet, and supply this `BatchAccountContext` to the `-BatchContext` parameter of a Batch service cmdlet. Azure Active Directory authentication is mandatory for accounts with `PoolAllocationMode = UserSubscription`.
    - For existing accounts or for new accounts created with `PoolAllocationMode = BatchService`, you may continue to use shared key authentication by retrieving a `BatchAccountContext` object using the `Get-AzureRmBatchAccoutKeys` cmdlet.
* Add support for online help
    - Run Get-Help with the -Online parameter to open the online help in your default Internet browser'

        # External dependent modules of this module
        # ExternalModuleDependencies = ''

    } # End of PSData hashtable
    
 } # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}

